ggplot(df, aes(R_i_mm_eps_0.1, response_correct_mm)) +
stat_summary()
ggplot(df, aes(R_i_bin, response_correct_mm)) +
stat_summary()
# add bins
df <-  df %>% mutate(R_i_bin = cut(R_i_mm_eps_0.1, breaks = c(0.5, 1, 1.5, 2, 2.5)))
View(df)
# add bins
df <-  df %>% mutate(R_i_bin = cut(R_i_mm_eps_0.1, breaks = c(0, 0.5, 1, 1.5, 2, 2.5)))
ggplot(df, aes(R_i_bin, response_correct_mm)) +
stat_summary()
ggplot(df, aes(R_i_bin, response_correct_mm)) +
stat_summary(geom = line)
ggplot(df, aes(R_i_bin, response_correct_mm)) +
stat_summary()
ggplot(df, aes(R_i_bin, response_correct_mm)) +
stat_summary() +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = trial_type)) +
stat_summary() +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary() +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(position = "dodge") +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(position = position_dodge(0.4)) +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5)
# add bins
df <-  df %>% mutate(R_i_bin = cut(R_i_mm_eps_0.1, breaks = c(0, 0.5, 1, 1.5, 2, 2.5))) %>% filter(!is.na(R_i_bin))
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(geom = "smooth", position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(fun.data = mean_ci_boot, position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(fun.data = mean_cl_boot, position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5)
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(fun.data = mean_cl_boot, position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5) + facet_grid(trial_type ~ task)
# add bins
df <-  df %>% mutate(R_i_bin = cut(R_i_mm_eps_0.1, breaks = c(0, 0.5, 1, 1.5, 2, 2.5))) %>% filter(!is.na(R_i_bin)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ggplot(df, aes(R_i_bin, response_correct_mm, color = fsm_type)) +
stat_summary(fun.data = mean_cl_boot, position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5) + facet_grid(trial_type ~ task)
ggplot(df, aes(R_i_bin, response_correct_mm, color = trial_type)) +
stat_summary(fun.data = mean_cl_boot, position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5) + facet_grid(fsm_type ~ task)
ggplot(df, aes(R_i_bin, response_correct_mm)) +
stat_summary(fun.data = mean_cl_boot, position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5) + facet_grid(fsm_type ~ task)
ggplot(df, aes(R_i_bin, response_correct_mm, color = trial_type)) +
stat_summary(fun.data = mean_cl_boot, position = position_dodge(0.2)) +
geom_hline(yintercept = 0.5) + facet_grid(fsm_type ~ task)
ggplot(df, aes(R_i_bin, response_correct_mm, color = trial_type)) +
stat_summary(fun.data = mean_cl_boot, position = position_dodge(0.4)) +
geom_hline(yintercept = 0.5) + facet_grid(fsm_type ~ task)
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
View(ss_betas)
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
ss_betas <-  read.csv("../outputs/predicted_accuracy_v2.csv") %>% relocate(fsm) %>% mutate(across(fsm:condition, as.factor)) %>%
mutate(task = fct_recode(task,  "Prediction" = "prediction", "Control" = 'control', "Explanation" = "explanation"),
task = fct_relevel(task,  c("Prediction","Control","Explanation")))
ss_betas <- ss_betas %>%
mutate(condition = fct_relevel(condition, c("visible", "hidden", "hidden_an")),
condition = fct_recode(condition, "Visible" = "visible", "Hidden" = "hidden", "Hidden AN" = "hidden_an"))
ss_betas <- ss_betas %>%
mutate(fsm = fct_relevel(fsm, c("easy", "hard")),
fsm = fct_recode(fsm, "Easy" = "easy", "Hard" = "hard"))
plot1 <- ggplot(ss_betas, aes(task, predicted_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Predicted Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
plot1 <- ggplot(ss_betas, aes(task, mm_accuracy, fill = task)) +
geom_boxplot(
width = 0.5,
# removing outliers
outlier.color = NA,
alpha = 0.5,
position = position_dodge(width=0.8)
)   +  # Themes and Labels
labs(fill = "",
y = "Mental Model Accuracy",
x = ""
)  +
geom_hline(yintercept = 0.5, color = "black", size = 10, alpha = 0.2)+
geom_point(position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.4), size = 1, alpha = 0.2)+
scale_fill_manual(values = c("Prediction" = "#AA4499","Control" = "#999933", "Explanation" = "#6699CC")) +
facet_grid(fsm~condition)  + theme_classic()+  theme(legend.position = "top", strip.text.x = element_text(size = 12), axis.text = element_text(size = 12), text = element_text(size = 15), axis.text.x=element_blank(),axis.ticks.x=element_blank())
plot1
